syntax = "proto3";

import "amount.proto";

message LedgerObject {

    oneof object {
        AccountRoot account_root = 1;
        RippleState ripple_state = 2;
        Offer offer = 3;
        SignerList signer_list = 4;
        DirectoryNode directory_node = 5;
    }
}

enum LedgerEntryType {
    LEDGER_ENTRY_TYPE_UNSPECIFIED     = 0;
    LEDGER_ENTRY_TYPE_ACCOUNT_ROOT    = 1;
    LEDGER_ENTRY_TYPE_AMENDMENTS      = 2;
    LEDGER_ENTRY_TYPE_CHECK           = 3;
    LEDGER_ENTRY_TYPE_DEPOSIT_PREAUTH = 4;
    LEDGER_ENTRY_TYPE_DIRECTORY_NODE  = 5;
    LEDGER_ENTRY_TYPE_ESCROW          = 6;
    LEDGER_ENTRY_TYPE_FEE_SETTINGS    = 7;
    LEDGER_ENTRY_TYPE_LEDGER_HASHES   = 8;
    LEDGER_ENTRY_TYPE_OFFER           = 9;
    LEDGER_ENTRY_TYPE_PAY_CHANNEL     = 10;
    LEDGER_ENTRY_TYPE_RIPPLE_STATE    = 11;
    LEDGER_ENTRY_TYPE_SIGNER_LIST     = 12;
}

message DirectoryNode {

    uint32 flags = 1;

    // 32 bytes
    bytes root_index = 2;

    repeated bytes indexes = 3;

    uint64 index_next = 4;

    uint64 index_previous = 5;

    string owner = 6;

    Currency taker_pays_currency = 7;

    // 20 bytes
    bytes taker_pays_issuer = 8;

    Currency taker_gets_currency = 9;

    // 20 bytes
    bytes taker_gets_issuer = 10;
}

message SignerList {

    uint32 flags = 1;

    // 32 bytes
    bytes previous_txn_id = 2;

    uint32 previous_transaction_ledger_sequence = 3;

    uint64 owner_node = 4;

    repeated SignerEntry signer_entries = 5;

    uint32 signer_list_id = 6;

    uint32 signer_quorum = 7;
}

message SignerEntry {

    AccountAddress account = 1;

    // this is actually uint16, but protobuf can't express uint16
    uint32 signer_weight = 2;
}

message AccountRoot {

    AccountAddress account = 1;

    XRPDropsAmount balance = 2;

    uint32 sequence = 3;

    uint32 flags = 4;

    uint32 owner_count = 5;

    // 32 bytes
    bytes previous_transaction_id = 6;

    uint32 previous_transaction_ledger_sequence = 7;

    // 32 bytes
    bytes account_transaction_id = 8;

    // Variable length
    bytes domain = 9;

    // 16 bytes
    bytes email_hash = 10;

    // Variable length
    bytes message_key = 11;

    // base58 encoding
    string regular_key = 12;

    uint32 tick_size = 13;

    uint32 transfer_rate = 14;
}

message RippleState {

    CurrencyAmount balance = 1;

    uint32 flags = 2;

    CurrencyAmount low_limit = 3;

    CurrencyAmount high_limit = 4;

    uint64 low_node = 5;

    uint64 high_node = 6;

    uint32 low_quality_in = 7;

    uint32 low_quality_out = 8;

    uint32 high_quality_in = 9;

    uint32 high_quality_out = 10;

    // 32 bytes
    bytes previous_transaction_id = 11;

    uint32 previous_transaction_ledger_sequence = 12;
}

message Offer {

    string account = 1;

    uint32 sequence = 2;

    uint32 flags = 3;

    CurrencyAmount taker_pays = 4;

    CurrencyAmount taker_gets = 5;

    bytes book_directory = 6;

    uint64 book_node = 7;

    uint64 owner_node = 8;

    uint32 expiration = 9;

    // 32 bytes
    bytes previous_transaction_id = 10;

    uint32 previous_transaction_ledger_sequence = 11;
}
